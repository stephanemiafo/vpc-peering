Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: "test"
    AllowedValues: 
      - test
      - dev
      - prod

  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '10.0.0.0/16'

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '10.0.0.0/24'

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String  
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '10.0.1.0/24'

  PublicSubnet3CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the third Availability Zone
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '10.0.3.0/24'

  InstanceType:
    Description: Instance hosting a web server.
    Type: String
    Default: 't2.micro'

  ImageId:
    Description: Template that will run on the EC2
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

  MyKeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  SsmPolicy:
    Description: The policy for Amazon EC2 Role to enable AWS Systems Manager service core functionality.
    Type: String 
    Default: 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore' 

  SGProtocol: 
    Type: String
    Default: 'tcp'

  SshSGCidrBlock:
    Description: The source IPv4 CIDR range to allow or deny, in CIDR notation # for example, 172.16.0.0/24)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})      
    Default: '10.0.0.0/16'

  SGPortRange:
    Description: Simple Description of a Number Parameter
    Type: Number
    MinValue: 20
    MaxValue: 65535
   
  # SGProtocol1: 
  #   Type: String
    # Default: icmp

  HttpSGCidrBlock:
    Description: The source IPv4 CIDR range to allow or deny, in CIDR notation # for example, 172.16.0.0/24)
    Type: String
    MinLength: '9'
    MaxLength: '18'   
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: '0.0.0.0/0'
 
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-VPC" 

  InternetGateway:                                            
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-Public-Subnet(AZ1)" # quote

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-Public-Subnet(AZ2)" # quote

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet3CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-Public-Subnet(AZ3)" # quote

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Public-RTB

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: !Ref HttpSGCidrBlock
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet3

  SsmRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns: 
        - !Ref SsmPolicy
     
  RootInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
      - Ref: SsmRole      

  MyPubTestInstance1: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: ImageId     
      InstanceType: 
        Ref: InstanceType
      SecurityGroupIds: 
        - Ref: PublicSecurityGroup
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Server-public1
      KeyName:
        Ref: MyKeyName
      IamInstanceProfile:       
        Ref: RootInstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "Hello from server in ${AWS::Region}" > /var/www/html/index.html
      # Make sure that the quotation marks around the text to be echoed are straight double quotes, 
      # not curly or smart quotes, which may cause issues when running the script.
     

  MyPubTestInstance2: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: 
        Ref: ImageId
      InstanceType: 
        Ref: InstanceType
      SecurityGroupIds: 
        - Ref: PublicSecurityGroup
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Server-public2   
      KeyName:
        Ref: MyKeyName
      IamInstanceProfile:       
        Ref: RootInstanceProfile
      UserData:
        Fn::Base64: 
          #!/bin/bash 
          yum install httpd mysql php php-mysql -y
          amazon-linux-extras install -y php7.2
          cd /var/www/html
          wget https://wordpress.org/latest.tar.gz
          tar -xzf latest.tar.gz
          cp -r wordpress/* /var/www/html/
          rm -rf wordpress
          rm -rf latest.tar.gz
          service httpd start
          chkconfig httpd on

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http access and ssh into the instance
      SecurityGroupIngress:

        - CidrIp: !Ref HttpSGCidrBlock
          IpProtocol: !Ref SGProtocol
          FromPort: !Ref SGPortRange
          ToPort: !Ref SGPortRange
           
        - CidrIp: !Ref SshSGCidrBlock             
          IpProtocol: !Ref SGProtocol
          FromPort: !Ref SGPortRange
          ToPort: !Ref SGPortRange

      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Public-SG

Outputs:
  VpcID:
    Description: The ID of the Vpc
    Value: !GetAtt VPC.VpcId
  
  PublicSecurityGroupID:
    Description: The ID of the Public SG
    Value: !Ref PublicSecurityGroup

  MyPubTestInstance1ID:
    Description: The ID of the first instance
    Value: !Ref MyPubTestInstance1

  MyPubTestInstance2ID:
    Description: The ID of the second instance
    Value: !Ref MyPubTestInstance2